{"version":3,"sources":["components/Filter.js","components/Notification.js","components/PersonForm.js","components/Person.js","components/Persons.js","services/persons.js","App.js","index.js"],"names":["SearchFilter","handleFilter","useState","searchValue","setSearchValue","value","onChange","e","target","Notification","type","message","className","style","position","top","PersonForm","handleSubmit","newName","setNewName","newNumber","setNewNumber","alertMessage","setAlertMessage","notify","setTimeout","onSubmit","event","preventDefault","then","result","catch","error","Person","person","handleRemove","name","number","onClick","window","confirm","id","Persons","persons","map","key","baseUrl","axios","get","response","data","newPerson","post","delete","put","App","setPersons","useEffect","personService","initialPersons","console","warn","list","Filter","Promise","resolve","reject","pos","findIndex","toUpperCase","returnPerson","msgToReturn","filter","log","concat","search","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b9a25ba8.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\n\r\nconst SearchFilter = ({ handleFilter }) => {\r\n  const [ searchValue, setSearchValue ] = useState('')\r\n\r\n  const doChange = (e) => {\r\n    setSearchValue(e.target.value)\r\n    handleFilter(e.target.value)\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      filter shown with\r\n      <input value={searchValue} onChange={doChange} />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SearchFilter","import React from 'react'\r\n\r\nconst Notification = ({ type, message }) => {\r\n  return (\r\n    <div className={type} style={{position: 'fixed', top: 0}}>\r\n      {message}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Notification","import React, { useState } from 'react'\r\nimport Notification from './Notification'\r\n\r\nconst PersonForm = ({ handleSubmit }) => {\r\n  const [ newName, setNewName ] = useState('')\r\n  const [ newNumber, setNewNumber ] = useState('')\r\n  const [ alertMessage, setAlertMessage ] = useState(null)\r\n\r\n  const notify = (type, message) => {\r\n    setAlertMessage({\r\n      type: type,\r\n      message: message\r\n    })\r\n    setTimeout(() => {\r\n      setAlertMessage(null)\r\n    }, 5000)\r\n  }\r\n\r\n  const doSubmit = (event) => {\r\n    event.preventDefault()\r\n    if (newName === '' || newNumber === '') {\r\n      notify('error', 'You need to input the data (name & number) first')\r\n      return\r\n    }\r\n\r\n    handleSubmit(newName, newNumber)\r\n      .then(result => {\r\n        // console.log('submit result', result)\r\n        if (result.type === 'success') {\r\n          setNewNumber('')\r\n          setNewName('')\r\n        }\r\n        notify(result.type, result.message)\r\n      })\r\n      .catch(error => {\r\n        // console.log('error', error)\r\n        notify('error', error.message)\r\n      })\r\n  }\r\n\r\n  return (\r\n    <>\r\n      { alertMessage && <Notification type={alertMessage.type} message={alertMessage.message}/>}\r\n      <form onSubmit={doSubmit}>\r\n        <div>\r\n          name: <input value={newName} onChange={(e) => setNewName(e.target.value)} />\r\n        </div>\r\n        <div>\r\n          number: <input value={newNumber} onChange={(e) => setNewNumber(e.target.value)} />\r\n        </div>\r\n        <div>\r\n          <button type=\"submit\">add</button>\r\n        </div>\r\n      </form>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default PersonForm","import React from 'react'\r\n\r\nconst Person = ({ person, handleRemove }) => {\r\n  const doRemove = () => {\r\n    if (window.confirm(`Delete ${person.name}?`)) {\r\n      handleRemove(person.id)\r\n    }\r\n  }\r\n\r\n  return <div>\r\n    {person.name} {person.number}\r\n    <button onClick={doRemove}>delete</button>\r\n  </div>\r\n}\r\n\r\nexport default Person","import React from 'react'\r\nimport Person from './Person'\r\n\r\nconst Persons = ({ persons, handleRemove }) => {\r\n  return (\r\n    persons.map(person => \r\n      <Person \r\n        key={person.name} \r\n        person={person} \r\n        handleRemove={handleRemove}\r\n      />)\r\n  )\r\n}\r\n\r\nexport default Persons","import axios from 'axios'\r\n// const baseUrl = 'http://localhost:5000/api/persons'\r\nconst baseUrl = '/api/persons'\r\n\r\n\r\nconst getAll = () => {\r\n  const req = axios.get(baseUrl)\r\n  return req.then(response => response.data)\r\n}\r\n\r\nconst create = newPerson => {\r\n  const req = axios.post(baseUrl, newPerson)\r\n  return req.then(response => response.data)\r\n}\r\n\r\nconst remove = id => {\r\n  const req = axios.delete(`${baseUrl}/${id}`)\r\n  return req.then(response => response.data)\r\n}\r\n\r\nconst update = (id, newPerson) => {\r\n  const req = axios.put(`${baseUrl}/${id}`, newPerson)\r\n  return req.then(response => response.data)\r\n  \r\n}\r\n\r\nexport default { getAll, create, remove, update }","import React, { useState, useEffect } from 'react'\nimport Filter from './components/Filter'\nimport PersonForm from './components/PersonForm'\nimport Persons from './components/Persons'\nimport Notification from './components/Notification'\nimport personService from './services/persons'\n\nconst App = () => {\n  const [ persons, setPersons ] = useState([])\n  const [ searchValue, setSearchValue ] = useState('')\n  const [ alertMessage, setAlertMessage ] = useState(null)\n\n  useEffect(() => {\n    personService\n      .getAll()\n      .then(initialPersons => {\n        setPersons(initialPersons)\n      })\n      .catch(error => {\n        console.warn(error)\n      })\n  }, [])\n\n  const isExist = name => persons.findIndex(person => person.name.toUpperCase() === name.toUpperCase())\n\n  const notify = (type, message) => {\n    setAlertMessage({\n      type: type,\n      message: message\n    })\n    setTimeout(() => {\n      setAlertMessage(null)\n    }, 5000)\n  }\n\n  const handleSubmit = (newName, newNumber) => {\n    return new Promise((resolve, reject) => {\n      const pos = isExist(newName)\n      if (pos >= 0) {\n        if (window.confirm(`${newName} is already added to phonebook, replace the old number (${persons[pos].number}) with a new one (${newNumber})?`)) {\n          const newPerson = { name: persons[pos].name, number: newNumber }\n          personService\n            .update(persons[pos].id, newPerson)\n            .then (returnPerson => {\n              setPersons(persons.map(person => \n                person.id !== persons[pos].id \n                ? person \n                : returnPerson))\n  \n              resolve({ \n                type: 'success', \n                message: `${newName}'s new phone number was updated` \n              })\n            })\n            .catch(error => {\n              let msgToReturn = ''\n\n              switch (error.message) {\n                case 'Request failed with status code 404':\n                  setPersons(persons.filter(person => person.name.toUpperCase() !== newName.toUpperCase()))\n                  msgToReturn = `Information of ${newName} has been already removed from server`\n                  break;\n\n                case 'Request failed with status code 400':\n                  msgToReturn = `Bad request (either because of the input or the person is not existed in the phonebook. Please refresh your browser.`\n                  break;\n              \n                default:\n                  break;\n              }\n\n              console.log(error)\n              \n              reject({ \n                type: 'error', \n                message: msgToReturn\n              })\n            })\n        } else {\n          resolve({ \n            type: 'warning', \n            message: 'Nothing happens yet'\n          })\n        }\n      } else {\n        personService\n          .create({ name: newName, number: newNumber })\n          .then(newPerson => {\n            setPersons(persons.concat(newPerson))\n            resolve({ \n              type: 'success', \n              message: `${newName} was added successfully to the phonebook` \n            })\n          })\n          .catch(error => {\n            console.log(error)\n            reject({ \n              type: 'error', \n              message: error.response.data.error\n            })\n          })\n      }\n    }) \n  }\n\n  const handleRemove = (id) => {\n    personService\n      .remove(id)\n      .then(setPersons(persons.filter(person => person.id !== id)))\n      .then(notify('success', 'Remove successfully'))\n      .catch(error => {\n        console.log(error)\n        notify('error', 'Error when trying to remove the person')\n      })\n  }\n\n  const findPersons = (list, value) => {\n    return list.filter(person => \n      person.name.toUpperCase()\n      .search(value.toUpperCase()) >= 0\n    )\n  }\n\n  const handleFilter = (value) => {\n    setSearchValue(value)\n  }\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n\n      { alertMessage && <Notification type={alertMessage.type} message={alertMessage.message}/>}\n\n      <Filter handleFilter={handleFilter}/>\n\n      <h2>add a new</h2>\n      <PersonForm handleSubmit={handleSubmit}/>\n\n      <h2>Numbers</h2>\n      <Persons \n        persons={searchValue === '' \n          ? persons \n          : findPersons(persons, searchValue)}\n        handleRemove={handleRemove}\n      />\n    </div>\n  )\n}\n\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n)"],"sourceRoot":""}